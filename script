-- Añadir estas nuevas propiedades a la tabla RBXWix (al inicio, después de ESPObjects)
RBXWix.ESPDistance = true
RBXWix.ESPHealth = true
RBXWix.ESPBox = true
RBXWix.ESPSkeleton = false

-- Mejorar la función de noclip (reemplazar las funciones existentes)
local noclipParts = {}
local noclipConnection

local function enableNoclip()
    local character = player.Character
    if not character then return end
    
    -- Almacenar y desactivar colisiones de todas las partes
    for _, part in pairs(character:GetDescendants()) do
        if part:IsA("BasePart") and part.CanCollide then
            noclipParts[part] = true
            part.CanCollide = false
        end
    end
end

local function disableNoclip()
    local character = player.Character
    if not character then return end
    
    -- Restaurar colisiones solo para las partes que modificamos
    for part, _ in pairs(noclipParts) do
        if part and part.Parent then
            part.CanCollide = true
        end
    end
    noclipParts = {}
end

-- Conectar noclip al ciclo de Heartbeat
if noclipConnection then
    noclipConnection:Disconnect()
end

noclipConnection = RunService.Heartbeat:Connect(function()
    if RBXWix.NoclipEnabled then
        enableNoclip()
    else
        disableNoclip()
    end
end)
table.insert(connections, noclipConnection)

-- Modificar la función createESP para incluir las nuevas opciones
function createESP(character, playerName)
    if not character:FindFirstChild("HumanoidRootPart") then
        local waitStart = tick()
        while not character:FindFirstChild("HumanoidRootPart") and tick() - waitStart < 5 do
            wait(0.1)
        end
    end
    
    if not character:FindFirstChild("Head") then
        local waitStart = tick()
        while not character:FindFirstChild("Head") and tick() - waitStart < 5 do
            wait(0.1)
        end
    end
    
    if not character:FindFirstChild("HumanoidRootPart") or not character:FindFirstChild("Head") then
        return
    end
    
    -- Crear highlight (caja)
    local highlight = Instance.new("Highlight")
    highlight.Name = playerName .. "ESP"
    highlight.Adornee = character
    highlight.FillColor = Color3.fromRGB(255, 0, 0)
    highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
    highlight.FillTransparency = 0.8
    highlight.OutlineTransparency = 0
    highlight.DepthMode = RBXWix.ESPSkeleton and Enum.HighlightDepthMode.Occluded or Enum.HighlightDepthMode.AlwaysOnTop
    highlight.Enabled = RBXWix.ESPBox
    highlight.Parent = character
    
    -- Crear billboard GUI para información
    local billboard = Instance.new("BillboardGui")
    billboard.Name = playerName .. "ESPInfo"
    billboard.Adornee = character.Head
    billboard.Size = UDim2.new(0, 200, 0, RBXWix.ESPHealth and 70 or 50)
    billboard.StudsOffset = Vector3.new(0, 2.5, 0)
    billboard.AlwaysOnTop = true
    billboard.Parent = character
    
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Size = UDim2.new(1, 0, 0, 25)
    nameLabel.Position = UDim2.new(0, 0, 0, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = playerName
    nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    nameLabel.TextStrokeTransparency = 0
    nameLabel.Font = Enum.Font.GothamBold
    nameLabel.TextSize = 14
    nameLabel.Parent = billboard
    
    local distanceLabel = Instance.new("TextLabel")
    distanceLabel.Size = UDim2.new(1, 0, 0, 20)
    distanceLabel.Position = UDim2.new(0, 0, 0, 25)
    distanceLabel.BackgroundTransparency = 1
    distanceLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    distanceLabel.TextStrokeTransparency = 0
    distanceLabel.Font = Enum.Font.Gotham
    distanceLabel.TextSize = 12
    distanceLabel.Visible = RBXWix.ESPDistance
    distanceLabel.Parent = billboard
    
    local healthLabel
    if RBXWix.ESPHealth then
        healthLabel = Instance.new("TextLabel")
        healthLabel.Size = UDim2.new(1, 0, 0, 20)
        healthLabel.Position = UDim2.new(0, 0, 0, 45)
        healthLabel.BackgroundTransparency = 1
        healthLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
        healthLabel.TextStrokeTransparency = 0
        healthLabel.Font = Enum.Font.Gotham
        healthLabel.TextSize = 12
        healthLabel.Parent = billboard
    end
    
    -- Actualizar información en tiempo real
    local updateLoop = RunService.Heartbeat:Connect(function()
        if not character or not character:FindFirstChild("HumanoidRootPart") or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
            updateLoop:Disconnect()
            return
        end
        
        -- Actualizar distancia
        if RBXWix.ESPDistance then
            local distance = (character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
            distanceLabel.Text = string.format("Distancia: %.1f", distance)
        end
        
        -- Actualizar salud
        if RBXWix.ESPHealth and character:FindFirstChildOfClass("Humanoid") and healthLabel then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            healthLabel.Text = string.format("Salud: %d/%d", humanoid.Health, humanoid.MaxHealth)
            
            -- Cambiar color según la salud
            local healthPercent = humanoid.Health / humanoid.MaxHealth
            if healthPercent > 0.7 then
                healthLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
            elseif healthPercent > 0.3 then
                healthLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            else
                healthLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
            end
        end
        
        -- Actualizar visibilidad de elementos
        if highlight then
            highlight.Enabled = RBXWix.ESPBox
            highlight.DepthMode = RBXWix.ESPSkeleton and Enum.HighlightDepthMode.Occluded or Enum.HighlightDepthMode.AlwaysOnTop
        end
        
        if distanceLabel then
            distanceLabel.Visible = RBXWix.ESPDistance
        end
        
        if healthLabel then
            healthLabel.Visible = RBXWix.ESPHealth
        end
    end)
    
    table.insert(connections, updateLoop)
    table.insert(RBXWix.ESPObjects, highlight)
    table.insert(RBXWix.ESPObjects, billboard)
end

-- Añadir opciones de ESP en la pestaña de Jugadores (después del toggle principal de ESP)
local espDistanceToggle = createToggle("Mostrar Distancia", "Muestra la distancia a otros jugadores", true, tabFrames.Jugadores, function(state)
    RBXWix.ESPDistance = state
end)

local espHealthToggle = createToggle("Mostrar Salud", "Muestra la salud de otros jugadores", true, tabFrames.Jugadores, function(state)
    RBXWix.ESPHealth = state
end)

local espBoxToggle = createToggle("Mostrar Caja", "Muestra una caja alrededor de los jugadores", true, tabFrames.Jugadores, function(state)
    RBXWix.ESPBox = state
end)

local espSkeletonToggle = createToggle("Mostrar Esqueleto", "Muestra el esqueleto a través de paredes", false, tabFrames.Jugadores, function(state)
    RBXWix.ESPSkeleton = state
end)
